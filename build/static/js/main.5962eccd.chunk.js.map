{"version":3,"sources":["serviceWorker.js","components/Loading/index.js","pages/Home/index.js","components/PercentBar/index.js","components/Argument/index.js","components/ArgumentModal/index.js","pages/NewDilemma/index.js","pages/Dilemmas/index.js","pages/Dilemma/index.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","Loading","className","src","alt","App","props","useState","hasDilemmas","setHasDilemma","isLoading","setLoading","useEffect","axios","get","response","data","length","onClick","history","push","Percent","styled","section","Pro","span","amount","Cons","getPercentage","total","Math","floor","PercentBar","proAmount","conAmount","bind","Argument","text","type","id","setDilemmas","openDetail","delete","ArgumentModal","title","setTitle","point","setPoint","required","setRequired","handleClose","handleSubmitArg","onSubmit","event","preventDefault","htmlFor","placeholder","name","onChange","target","value","Number","min","max","NewDilemma","errorMessage","setError","proArgs","setProArg","totalPro","setTotalPro","totalCons","setTotalCons","totalPoints","setTotalPoints","conArgs","setConArg","argType","setArgType","showModal","setShowModal","handleClick","sum","array","count","forEach","element","getTotalCon","getTotalPro","alert","map","arg","index","key","post","err","oldArray","Dilemmas","dilemmas","dilemma","toString","Dilemma","params","res","put","ReactDOM","render","exact","path","component","Home","NewDilema","document","getElementById","URL","process","href","origin","addEventListener","fetch","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5962eccd.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport './styles.scss';\nexport const Loading = () => {\n    return  <div className=\"loading-container\">\n                <img src=\"/images/loading.svg\" alt=\"loading\" />\n            </div> \n}","import React,{ useEffect, useState }from 'react';\nimport './styles.scss';\nimport axios from 'axios';\nimport {Loading} from './../../components/Loading';\nfunction App(props) {\n\n  const [ hasDilemmas,setHasDilemma ] =  useState(false);\n  const [ isLoading, setLoading ] = useState(true);\n  useEffect(() => {\n    axios\n      .get(\n        \"https://us-central1-my-decision-ad541.cloudfunctions.net/api/dilemmas\"\n      )\n      .then(response => {\n        setHasDilemma(response.data.length !== 0);\n        setLoading(false);\n        return response.data;\n      });\n  }, []);\n\n  const handleClick = () => {\n    return !hasDilemmas ? props.history.push(\"/new-dilemma\") : props.history.push(\"/dilemmas\");\n  }\n  return (\n    <div className=\"App\">\n      {isLoading ?  \n      <Loading /> :\n      <header className=\"App-header\">\n        <section className=\"arrows\">\n            <span className=\"arrow-1\"></span>\n            <span className=\"arrow-2\"></span>\n            <span className=\"arrow-3\"></span>\n        </section>\n        <button onClick={handleClick}>New Decision</button> \n      </header>}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Percent = styled.section`\n    background-color: #b5b5b5;\n    width: 80%;\n    height: 30px;\n    margin: auto;\n    border: 2px solid #737373;\n    display: flex;\n}`;\nconst Pro = styled.span`\n  display: block;\n  width: ${props => `${props.amount()}%`};\n  height: 100%;\n  background: #05da8e;\n`;\nconst Cons = styled.span`\n  display: block;\n  height: 100%;\n  width: ${props => `${props.amount()}%`};\n  background: #d01c54;\n`;\nconst getPercentage = (amount, total) => {\n  const percent = amount && total && Math.floor((amount / total) * 100);\n  return percent;\n};\nconst PercentBar = props => {\n  const { proAmount, conAmount } = props;\n  const total = proAmount + conAmount;\n  return (\n    <Percent className=\"precent-container\">\n      <Pro amount={getPercentage.bind(this, proAmount, total)}></Pro>\n      <Cons amount={getPercentage.bind(this, conAmount, total)}></Cons>\n    </Percent>\n  );\n};\nexport default PercentBar;\n","import React from 'react';\nimport axios from 'axios';\nimport './styles.scss';\nconst Argument = (props) => {\n    const {text, type, id, setDilemmas, openDetail} = props;\n    const deleteDilemma = () => {\n        axios\n        .delete(`https://us-central1-my-decision-ad541.cloudfunctions.net/api/dilemma/${id}`)\n        .then(() => { \n            axios.get(`https://us-central1-my-decision-ad541.cloudfunctions.net/api/dilemmas`)\n            .then((response)=> {\n                return setDilemmas(response.data);\n            })\n        })\n    }\n    \n    return (\n        <section className={`argument-container ${type}-arg`}>\n            {id && <span onClick={deleteDilemma}>eliminar</span>}<p>{text}</p>{id && <span onClick={openDetail.bind(this,id)}>editar</span>}\n        </section>)\n}\nexport default Argument;","import React, {useState} from \"react\";\nimport \"./styles.scss\";\n\nconst ArgumentModal = props => {\n\n  const [title, setTitle] = useState(\"\");\n  const [point, setPoint] = useState(0);\n  const [required, setRequired] = useState(false);\n\n  const { type, handleClose, handleSubmitArg} = props;\n  const handleSubmit = (event) => {\n\n    event.preventDefault();\n  }\n  const handleChange = (event) => {\n    setTitle(event.target.value);\n   }\n   const handleSwiperChange = (event) => {\n    setPoint(Number(event.target.value));\n   }\n   const handleClick = (event) => {\n    const arg = {\n      title: title, \n      type: type,\n      point: point,\n    };\n    if ( title !== '' && point !== 0) {\n      handleSubmitArg(event,arg)\n      handleClose();\n    }\n    setRequired(true);\n    event.preventDefault();\n   }\n  return (\n    <div className=\"modal-container\">\n     \n      <form onSubmit={handleSubmit}>\n      <span className=\"close\" onClick={handleClose}>\n        x\n      </span>\n        <label className={`${required ? 'alert':''}`} htmlFor=\"title\">Include your {type} argument</label>\n        <input\n          className={`${required ? 'alert':''}`}\n          placeholder=\" Add your argument\"\n          type=\"text\"\n          id=\"title\"\n          name=\"title\"\n          onChange={handleChange}\n        ></input>\n        <label className={`${required ? 'alert':''}`} >Rate the relevance</label>\n        <input \n          className={`${required ? 'alert':''}`}\n          onChange={handleSwiperChange} \n          type=\"range\"\n          value={point}\n          id=\"importance\" \n          name=\"points\" \n          min=\"1\" \n          max=\"10\"\n        />\n        <button onClick={handleClick}>Submit</button>\n      </form>\n    </div>\n  );\n};\nexport default ArgumentModal;\n","import React, { useState } from \"react\";\nimport \"./styles.scss\";\nimport PercentBar from \"../../components/PercentBar\";\nimport Argument from \"../../components/Argument\";\nimport ArgumentModal from \"../../components/ArgumentModal\";\nimport axios from \"axios\";\n\nfunction NewDilemma(props) {\n  const [ title, setTitle ] = useState(\"\");\n  const [ errorMessage, setError ] = useState(\"\");\n  const [ proArgs, setProArg ] = useState([]);\n  const [ totalPro, setTotalPro ] = useState(0);\n  const [ totalCons, setTotalCons ] = useState(0);\n  const [ totalPoints, setTotalPoints ] = useState(0);\n  const [ conArgs, setConArg ] = useState([]);\n  const [ argType, setArgType] = useState(\"\");\n  const [ showModal, setShowModal ] = useState(false);\n  const [ required, setRequired ] = useState(false);\n\n  const handleChange = event => {\n    event.preventDefault();\n    setError('');\n    setTitle(event.target.value);\n  };\n  const handleSubmit = (event) => {\n    setError('');\n    setTitle(title);\n    event.preventDefault();\n  };\n  const handleSubmitArg = (event,arg) => {\n    setError('');\n    switch (arg.type) {\n      case 'cons':\n        setConArg(oldArray => [...oldArray, arg]);\n        break;\n      case 'pro':\n        setProArg(oldArray => [...oldArray, arg]);\n        break;\n      default: console.log('no arg');\n        break;\n    }\n    event.preventDefault();\n  };\n  const handleClick = (type) => {\n    //argument button\n    setError('');\n    setArgType(type);\n    setShowModal(true);\n  }\n  const handleClose = () => {\n    setShowModal(false);\n  }\n  const sum = (array) => {\n    let count = 0;\n    array.length > 0 && array.forEach(element => {\n      count += element.point;\n    });\n    return count;\n  }\n  const getTotalCon = sum(conArgs);\n  const getTotalPro = sum(proArgs);\n  const handleDilemmaSubmit = () => {\n    setError('');\n    setTotalCons(getTotalCon);\n    setTotalPro(getTotalCon);\n    setTotalPoints(getTotalPro + getTotalCon);\n    if (title === '' || conArgs.length === 0 || proArgs.length === 0) {\n      setRequired(true);\n      return setError('Please charge title and arguments');\n    }\n    setRequired(false);\n    axios\n    .post('https://us-central1-my-decision-ad541.cloudfunctions.net/api/dilemma',{\n      title,\n      proArgs,\n      conArgs,\n      totalCons,\n      totalPro,\n      totalPoints,\n    })\n    .then(response => {\n      props.history.push(\"/dilemmas\");\n    })\n    .catch(err => console.log('Err',err))\n  }  \n  return (\n    <div className=\"App\">\n      <header>\n        {errorMessage !== '' && alert(errorMessage) }\n        {title && <h1>{title}</h1>}\n        <form onSubmit={handleSubmit}>\n          <input\n            className={required ? 'alert':''}\n            placeholder=\" Add your dilemma\"\n            type=\"text\"\n            id=\"title\"\n            name=\"title\"\n            value={title}\n            required\n            onChange={handleChange}\n          />\n        </form>\n      </header>\n      <PercentBar proAmount={getTotalPro} conAmount={getTotalCon} />\n      <article>\n        <section className=\"pros\">\n         { proArgs.map((arg, index) => (<Argument type={arg.type} key={`arg-${index}`} text={arg.title} />))}\n          <button onClick={() => handleClick('pro')} className=\"secondary pro-btn\">Add pro argument</button>\n        </section>\n        <span className=\"line\"></span>\n        <section className=\"cons\">\n          { conArgs.map((arg, index) => (<Argument type={arg.type} key={`arg-${index}`} text={arg.title} />))}\n          <button onClick={() => handleClick('cons')} className=\"secondary cons-btn\">Add cons argument</button>\n        </section>\n      </article>\n      <button onClick={handleDilemmaSubmit} >Save Dilemma</button>\n      {showModal && <ArgumentModal type={argType} handleClose={handleClose} handleSubmitArg={handleSubmitArg}/>}\n    </div>\n  );\n}\n\nexport default NewDilemma;\n","import React,{ useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Argument from '../../components/Argument';\nimport { Loading } from '../../components/Loading';\nimport './styles.scss';\n\nfunction Dilemmas(props) {\n  const [ dilemmas, setDilemmas ] = useState([]);\n  const [ isLoading, setLoading ] = useState(true);\n\n  const handleClick = () => {\n    props.history.push(\"/new-dilemma\")\n  }\n\n  const openDetail = (id) => {\n    setLoading(false);\n    props.history.push(`/dilemma/${id}`);\n  }\n  useEffect(() => {\n    axios\n      .get(\n        \"https://us-central1-my-decision-ad541.cloudfunctions.net/api/dilemmas\"\n      )\n      .then(response => {\n        setDilemmas(response.data);\n        setLoading(false);\n        return response.data;\n      });\n  }, []);\n  return (\n    <div className=\"App\">\n       {isLoading ?  \n      <Loading /> :\n      (<> \n      <header>\n      <h1>Your Dilemmas</h1>\n      </header>  \n      <div className=\"dilemmas\">\n      {dilemmas && dilemmas.map((dilemma, index) => {\n        const type = dilemma.totalPro > dilemma.totalCons ? 'pro': 'cons';\n        return <Argument \n                key={index.toString()} \n                text={dilemma.title} \n                type={type} \n                id={dilemma.id} \n                setDilemmas={setDilemmas}\n                openDetail={openDetail}/>\n      })}\n      </div>\n      <button onClick={handleClick}>New Decision</button>\n      </>)}\n    </div>\n  );\n}\n\nexport default Dilemmas;","import React, { useState, useEffect } from \"react\";\nimport \"./styles.scss\";\nimport PercentBar from \"../../components/PercentBar\";\nimport Argument from \"../../components/Argument\";\nimport ArgumentModal from \"../../components/ArgumentModal\";\nimport axios from \"axios\";\nimport { Loading } from '../../components/Loading';\n\nfunction Dilemma(props) {\n  const [ title, setTitle ] = useState(\"\");\n  const [ errorMessage, setError ] = useState(\"\");\n  const [ proArgs, setProArg ] = useState([]);\n  const [ totalPro, setTotalPro ] = useState(0);\n  const [ totalCons, setTotalCons ] = useState(0);\n  const [ totalPoints, setTotalPoints ] = useState(0);\n  const [ conArgs, setConArg ] = useState([]);\n  const [ argType, setArgType] = useState(\"\");\n  const [ showModal, setShowModal ] = useState(false);\n  const [ required, setRequired ] = useState(false);\n  const [ isLoading, setLoading ] = useState(true);\n\n  useEffect(() => {\n      axios\n      .get(`https://us-central1-my-decision-ad541.cloudfunctions.net/api/dilemma/${props.match.params.id}`)\n      .then(res => {\n        setTitle(res.data.title);\n        setProArg(res.data.proArgs);\n        setConArg(res.data.conArgs);\n        setTotalCons(res.data.totalCons);\n        setTotalPro(res.data.totalPro);\n        setTotalPoints(res.data.totalPoints);\n        setLoading(false);\n      } )\n      .catch(err => console.log('err',err));\n  }, []);\n  const handleChange = event => {\n    event.preventDefault();\n    setError('');\n    setTitle(event.target.value);\n  };\n  const handleSubmit = (event) => {\n    setError('');\n    setTitle(title);\n    event.preventDefault();\n  };\n  const handleSubmitArg = (event,arg) => {\n    setError('');\n    switch (arg.type) {\n      case 'cons':\n        setConArg(oldArray => [...oldArray, arg]);\n        break;\n      case 'pro':\n        setProArg(oldArray => [...oldArray, arg]);\n        break;\n      default: console.log('no arg');\n        break;\n    }\n    event.preventDefault();\n  };\n  const handleClick = (type) => {\n    //argument button\n    setError('');\n    setArgType(type);\n    setShowModal(true);\n  }\n  const handleClose = () => {\n    setShowModal(false);\n  }\n  const sum = (array) => {\n    let count = 0;\n    array && array.length > 0 && array.forEach(element => {\n      count += element.point;\n    });\n    return count;\n  }\n    const getTotalCon = sum(conArgs);\n    const getTotalPro = sum(proArgs);\n  const handleDilemmaSubmit = () => {\n   \n    setError('');\n    setTotalCons(getTotalCon);\n    setTotalPro(getTotalCon);\n    setTotalPoints(getTotalPro + getTotalCon);\n    if (title === '' || conArgs.length === 0 || proArgs.length === 0) {\n      setRequired(true);\n      return setError('Please charge title and arguments');\n    }\n    setRequired(false);\n    axios\n    .put(`https://us-central1-my-decision-ad541.cloudfunctions.net/api/dilemma/${props.match.params.id}`,{\n      title,\n      proArgs,\n      conArgs,\n      totalCons,\n      totalPro,\n      totalPoints,\n    })\n    .then(response => {\n      props.history.push(\"/dilemmas\");\n    })\n\n    .catch(err => console.log('Err',err))\n  }  \n  return (\n    <div className=\"App\">\n      {isLoading ? <Loading /> : \n      <>\n        <header>\n          {errorMessage !== '' && alert(errorMessage) }\n          {title && <h1>{title}</h1>}\n          <form onSubmit={handleSubmit}>\n            <input\n              className={required ? 'alert':''}\n              placeholder=\" Add your dilemma\"\n              type=\"text\"\n              id=\"title\"\n              name=\"title\"\n              value={title}\n              required\n              onChange={handleChange}\n            />\n          </form>\n        </header>\n        <PercentBar proAmount={getTotalPro} conAmount={getTotalCon} />\n        <article>\n          <section className=\"pros\">\n          { proArgs.map((arg, index) => (<Argument type={arg.type} key={`arg-${index}`} text={arg.title} />))}\n            <button onClick={() => handleClick('pro')} className=\"secondary pro-btn\">Add pro argument</button>\n          </section>\n          <span className=\"line\"></span>\n          <section className=\"cons\">\n            { conArgs.map((arg, index) => (<Argument type={arg.type} key={`arg-${index}`} text={arg.title} />))}\n            <button onClick={() => handleClick('cons')} className=\"secondary cons-btn\">Add cons argument</button>\n          </section>\n        </article>\n        <button onClick={handleDilemmaSubmit} >Save Dilemma</button>\n        {showModal && <ArgumentModal type={argType} handleClose={handleClose} handleSubmitArg={handleSubmitArg}/>}\n      </>}\n      \n    </div>\n  );\n}\n\nexport default Dilemma;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport './reset.scss';\nimport Home from './pages/Home';\nimport NewDilema from './pages/NewDilemma';\nimport Dilemmas from './pages/Dilemmas';\nimport Dilemma from './pages/Dilemma';\n\n\nReactDOM.render(\n<Router>\n    <Switch>\n      <Route exact path='/' component={Home} />\n      <Route exact path='/new-dilemma' component={NewDilema} />\n      <Route exact path='/dilemmas' component={Dilemmas} />\n      <Route exact path='/dilemma/:id' component={Dilemma} />\n\n\n    </Switch>\n  </Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}